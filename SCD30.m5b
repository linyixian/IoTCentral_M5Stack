{"category":"SCD30","color":"#1f935b","blocks":["__SCD30_init","__SCD30_readData","__SCD30_readStatus"],"jscode":"// Block __SCD30_init\nvar __SCD30_init_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"init\"\n        }\n    ],\n    \"colour\": \"#1f935b\"\n};\n\nwindow['Blockly'].Blocks['__SCD30_init'] = {\n    init: function() {\n        this.jsonInit(__SCD30_init_json);\n    }\n};\n\nwindow['Blockly'].Python['__SCD30_init'] = function(block) {\n        return `from machine import I2C,Pin\nimport sys\nsys.path.append('/flash/res')\nfrom scd30 import SCD30\n\ni2c=I2C(scl=Pin(33),sda=Pin(32),freq=100000)\nscd30=SCD30(i2c,0x61)\n` + \"\\n\";\n};\n\n// Block __SCD30_readData\nvar __SCD30_readData_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"readData\"\n        }\n    ],\n    \"colour\": \"#1f935b\"\n};\n\nwindow['Blockly'].Blocks['__SCD30_readData'] = {\n    init: function() {\n        this.jsonInit(__SCD30_readData_json);\n    }\n};\n\nwindow['Blockly'].Python['__SCD30_readData'] = function(block) {\n        return [`scd30.read_measurement()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __SCD30_readStatus\nvar __SCD30_readStatus_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"readStatus\"\n        }\n    ],\n    \"colour\": \"#1f935b\"\n};\n\nwindow['Blockly'].Blocks['__SCD30_readStatus'] = {\n    init: function() {\n        this.jsonInit(__SCD30_readStatus_json);\n    }\n};\n\nwindow['Blockly'].Python['__SCD30_readStatus'] = function(block) {\n        return [`scd30.get_status_ready()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","code":{"init":["window['Blockly'].Python['__SCD30_init'] = function(block) {\n        return `from machine import I2C,Pin\nimport sys\nsys.path.append('/flash/res')\nfrom scd30 import SCD30\n\ni2c=I2C(scl=Pin(33),sda=Pin(32),freq=100000)\nscd30=SCD30(i2c,0x61)\n` + \"\\n\";\n};\n\n","from machine import I2C,Pin\nimport sys\nsys.path.append('/flash/res')\nfrom scd30 import SCD30\n\ni2c=I2C(scl=Pin(33),sda=Pin(32),freq=100000)\nscd30=SCD30(i2c,0x61)\n"],"readData":["window['Blockly'].Python['__SCD30_readData'] = function(block) {\n        return [`scd30.read_measurement()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","scd30.read_measurement()"],"readStatus":["window['Blockly'].Python['__SCD30_readStatus'] = function(block) {\n        return [`scd30.get_status_ready()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n","scd30.get_status_ready()"]}}